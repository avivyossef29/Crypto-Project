# exploit.py
# Skeleton for building your CRIME attack
from requester import *
import random

difficulty = None
difficulty = DifficultyLevel.NORMAL
# difficulty = DifficultyLevel.HARD


class CrimeSolver:
    def __init__(self, url, difficulty):
        self.oracle = CRIMERequester(url)
        self.difficulty = difficulty

    def find_flag(self, known):
        # CRIME Attack Challenge.
        """
        TODO: Implement your attack here!

        Tips for building your exploit:
        1. We know the flag format is CTF_FLAG{...}
        2. The server response contains 'secret_flag: <THE_FLAG>'
        3. Compression works better when strings match
        4. For HARD mode, the client encrypts with AES.CBC, figure it out!
        """
        charset = (
            string.ascii_letters + string.digits + "{}_}"
        )  # Possible flag characters

        for char in charset:
            """
            Do Something!
            """

    def adjust_padding(self, known):
        """
        Utility for HARD mode.
        """


def main():
    url = "http://localhost:8443"  # Update this to the actual server URL
    known = "secret_flag: CTF_FLAG{"
    assert (
        difficulty
    ), "Please choose a difficulty level, Normal: (Compression). Hard: (Compression + CBC Encryption)."
    solver = CrimeSolver(url, difficulty)

    print(f"Starting attack in {difficulty.name} mode...")
    print(f"Known prefix: {known}")

    solver.find_flag(known)


if __name__ == "__main__":
    main()
